{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red29\green29\blue29;\red255\green255\blue255;\red83\green83\blue83;
\red182\green83\blue203;}
{\*\expandedcolortbl;;\cssrgb\c14902\c14902\c14902;\cssrgb\c100000\c100000\c100000;\cssrgb\c40000\c40000\c40000;
\cssrgb\c77255\c43529\c83529\c25098;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs27 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Contenido de la actividad\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs28 \cf2 \
\pard\pardeftab720\sl200\qc\partightenfactor0

\f2\fs21 \cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf2 \cb5 \strokec2 \
\pard\pardeftab720\sl200\qc\partightenfactor0

\f2\fs21 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs28 \cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs31\fsmilli15750 \cf2 \cb3 Ejercicio 1: BANCO-CAJEROAUTOMATICO\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs21 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 banco:\cb1 \
\cb3 Lleva el saldo de 100 clientes en memoria local. Recibe dep\'f3sitos, consultas y extracciones.\cb1 \
\uc0\u8232 \
\cb3 cajero_automatico:\cb1 \
\cb3 Permite a un cliente realizar consultas, dep\'f3sitos, extracciones. Tiene un men\'fa con las tres opciones.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Eventos disponibles:
\f1\i0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [01]\'a0\'a0EVT_CONSULTA_SALDO: permite consultar el saldo de un cliente; como par\'e1metro lleva COD_CLIENTE (c\'f3digo del cliente).\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [02] EVT_DEPOSITO: permite realizar un dep\'f3sito, como par\'e1metros lleva |COD_CLIENTE|IMPORTE (c\'f3digo del cliente, importe a depositar).\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [03] EVT_EXTRACCION: permite realizar una extracci\'f3n; como par\'e1metros lleva |COD_CLIENTE|IMPORTE (c\'f3digo del cliente, importe a extraer).\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [04] EVT_RTA_SALDO: responde con el saldo del cliente \'93|COD_CLIENTE|SALDO\'94.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [04] EVT_RTA_SALDO_NOK: responde con el saldo del cliente \'93|COD_CLIENTE|ERROR\'94, donde ERROR es un texto con el error (por ejemplo, cliente no encontrado).\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [05] EVT_RTA_DEPOSITO_OK: responde con el saldo del cliente despu\'e9s del dep\'f3sito \'93|COD_CLIENTE|SALDO\'94.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [06] EVT_RTA_DEPOSITO_NOK: responde con el saldo del cliente despu\'e9s del dep\'f3sito \'93|COD_CLIENTE|ERROR\'94, donde ERROR es un texto con el error (por ejemplo, cliente no encontrado).\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [07] EVT_RTA_EXTRACCION_OK: responde con el saldo del cliente despu\'e9s de la extracci\'f3n \'93|COD_CLIENTE|SALDO\'94\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [08] EVT_RTA_EXTRACCION_NOK: responde con el saldo del cliente despu\'e9s del dep\'f3sito \'93|COD_CLIENTE|ERROR\'94, donde ERROR es un texto con el error (por ejemplo, cliente no encontrado).\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 CASOS DE USO 
\f1\i0 \cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 CU-001: Consulta de saldo\cb1 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 El m\'f3dulo cajero_automatico solicita por teclado el c\'f3digo de cliente. Se env\'eda por una cola de mensajes el evento EVT_CONSULTA_SALDO, con el c\'f3digo de cliente COD_CLIENTE.\cb1 \
\cb3 El m\'f3dulo banco responde con el evento EVT_RTA_SALDO, con c\'f3digo cliente y el saldo. En caso de error, se env\'eda el evento EVT_RTA_SALDO_NOK, indicando el error.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 CU-002: Dep\'f3sitos\cb1 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 El m\'f3dulo cajero_automatico solicita por teclado el c\'f3digo de cliente y el importe. Se env\'eda por cola de mensajes el evento EVT_DEPOSITO, con los datos solicitados.\cb1 \
\cb3 El m\'f3dulo banco responde con el evento EVT_RTA_DEPOSITO_OK, con c\'f3digo cliente y el saldo. En caso de error, se env\'eda el evento EVT_RTA_DEPOSITO_NOK, indicando el error.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 CU-003: Extracciones\cb1 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 El modulo cajero_automatico solicita por teclado el c\'f3digo de cliente y el importe. Se env\'eda por cola de mensajes el evento EVT_EXTRACCION, con los datos solicitados.\cb1 \
\cb3 El m\'f3dulo banco responde con el evento EVT_EXTRACCION_OK, con c\'f3digo cliente y el saldo. En caso de error, se env\'eda el evento EVT_EXTRACCION_NOK, indicando el error.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 Consignas 
\f1\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Se pide realizar la soluci\'f3n con dos procesos por separado, utilizando una cola de mensajes.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mostrar los mensajes por pantalla en ambos procesos.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Buscar la forma que pueda haber m\'e1s de un cajero_automatico.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs31\fsmilli15750 \cf2 \cb3 Ejercicio 2: Bolos\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs21 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Se trata de un proceso BOLERA\'a0y otro JUGADORES con varios hilos (uno por cada jugador).\cb1 \
\cb3 Utiliza cola de mensajes con los siguientes IDs:\cb1 \
\uc0\u8232 \
\
\pard\pardeftab720\qc\partightenfactor0

\f2 \cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \strokec2 \
\
\pard\pardeftab720\qc\partightenfactor0
\cf2 \pard\pardeftab720\qc\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso BOLERA (MSG_ BOLERA)
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Hilo Principal (main):\cb1 \
\cb3 1) La cantidad de jugadores es siempre 2.\cb1 \
\cb3 2) Borrar los mensajes anteriores, para empezar de 0.\'a0\cb1 \
\cb3 3) Inicializa una vector local\'a0de dos posiciones, uno por cada l\'ednea de bolos que le corresponde a cada jugador.\'a0Ambas posiciones se inicializan con la cantidad de 10 pinos.\cb1 \
\cb3 4) Le env\'eda un mensaje a cada JUGADOR, EVT_INICIO. (MSG_JUGADOR+i).\cb1 \
\cb3 5) Espera recibir mensajes de los JUGADORES.\cb1 \
\cb3 Si recibe EVT_TIRO.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Define al azar los pinos tirados del 1 hasta la cantidad de pinos disponibles (cuidado: utilizar la l\'ednea correcta dependiendo del jugador)\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Actualiza el vector con la posici\'f3n correcta con la cantidad de pinos en pie.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si se tiran todos los pinos de una vez, muestra la leyenda \'93CHUZA\'94.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Devuelve la cantidad de pinos tirados al jugador con el EVT_RESULTADO, cantidad_de_pinos.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si se tiran todos los pinos o ya recibi\'f3 3 tiros de ese jugador, env\'eda el EVT_FIN al jugador correspondiente (esto lo hace en lugar de EVT_RESULTADO) con la cantidad de puntos obtenidos (1 por cada pino tirado y 20 si se tiran todos de una).\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 6) Si terminaron de tirar los 2 jugadores (o bien tiraron todos los pinos o tiran 3 veces), finaliza.\cb1 \
\cb3 7) Caso contrario, repite desde el punto 5.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso JUGADORES\'a0
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 El hilo principal (main):\'a0\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 La cantidad de jugadores es siempre 2.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lanza tantos HiloJUGADOR\'a0como JUGADORES haya.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Se queda esperando que terminen los hilos.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Muestra el puntaje de cada jugador e indica qui\'e9n gan\'f3 por pantalla (recibido de los hilos).\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 HiloJUGADOR (uno por JUGADOR): (MSG_JUGADOR+nro_JUGADOR)\cb1 \
\cb3 1) Espera recibir el EVT_INICIO.\cb1 \
\cb3 2) Escribir por pantalla, \'93Soy el jugador N y voy a tirar\'93.\cb1 \
\cb3 3) Env\'eda al BOLERA el EVT_TIRO.\cb1 \
\cb3 4) Espera recibir el EVT_RESULTADO o EVT_FIN.\cb1 \
\cb3 5) Muestra por pantalla los bolos tirados \'93Soy el jugador N y tire X bolos\'94.\cb1 \
\cb3 6) Espera 300 ms y vuelve a tirar.\cb1 \
\cb3 7) Se recibe el EVT_FIN; termina el hilo devolviendo los puntos obtenidos.\'a0\cb1 \
\cb3 8) Muestra por pantalla los puntos obtenidos.\cb1 \
\uc0\u8232 \
\cb3 Utilizar Makefile con la estructura de archivos vista en la cursada.\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs31\fsmilli15750 \cf2 \cb3 Ejercicio 3: Pienso un n\'famero\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs21 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Se trata de un proceso PIENSO y otro JUGADOR.\cb1 \
\cb3 Utiliza cola de mensajes con los siguientes IDs:\cb1 \
\uc0\u8232 \
\cb3 MSG_NADIE 0\cb1 \
\cb3 MSG_PIENSO 1\cb1 \
\cb3 MSG_JUGADOR 2\'a0\cb1 \
\uc0\u8232 \
\cb3 EVT_NINGUNO 0\cb1 \
\cb3 EVT_NUMERO 1 //\'a0Lleva como par\'e1metro un n\'famero de 1 al 99\cb1 \
\cb3 EVT_ACERTO 2\'a0\cb1 \
\cb3 EVT_NO_ACERTO 3\cb1 \
\cb3 EVT_FINALIZAR 4\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso PIENSO (MSG_PIENSO)
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 1) \'93Piensa un n\'famero\'94 genera en forma aleatoria un n\'famero del 1 al 99 y lo guarda en una variable local int pienso_un_numero;\cb1 \
\cb3 2) Borrar los mensajes anteriores, para empezar de 0.\'a0\cb1 \
\cb3 3) Espera recibir EVT_NUMERO del\'a0jugador, compara el n\'famero recibido con pienso_un_numero.\'a0\cb1 \
\cb3 a. En caso de acierto, le env\'eda un EVT_ACERTO al jugador.\'a0\cb1 \
\cb3 b. En caso de no acierto, responde con un EVT_NO_ACERTO al jugador.\cb1 \
\cb3 4) En caso de no haber aciertos, sigue con el punto 3.\'a0\cb1 \
\cb3 5) Si hubo acierto, muestra por pantalla el n\'famero del jugador ganador y finaliza.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso JUGADOR
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 HiloMain:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solicita por teclado la cantidad de jugadores.\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lanza tantos hilos como jugadores ingresados.\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Espera que finalicen los hilos.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 HiloJugador:\cb1 \
\cb3 1) Genera un n\'famero al azar de 1 al 99 (no repetitivos).\cb1 \
\cb3 2) Env\'eda\'a0EVT_NUMERO a MSG_PIENSO con el n\'famero que gener\'f3 en el punto 1.\cb1 \
\cb3 3) Espera recibir un evento del proceso PIENSO:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si recibe un mensaje EVT_ACERTO,\'a0muestra la cantidad de intentos\'a0y\'a0env\'eda un EVT_FINALIZAR a todos los jugadores, incluido el mismo.\cb1 \
\ls6\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si recibe un mensaje EVT_NO_ACERTO, sigue con el punto 1.\cb1 \
\ls6\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si recibe un mensaje EVT_FINALIZAR, finaliza el hilo.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Utilizar Makefile con la estructura de archivos vista en la cursada.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 Condiciones de correcci\'f3n (si no se cumple lo siguiente, no se corrige)
\f1\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 El programa debe compilar sin errores.\cb1 \
\ls7\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 El programa debe correr sin errores de memoria.\cb1 \
\ls7\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Debe estar correctamente identado.\cb1 \
\ls7\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Utilizar constantes.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 Puntos a tener en cuenta
\f1\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Los nombres de las variables deben ser descriptivos de su funci\'f3n.\cb1 \
\ls8\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Comentar el c\'f3digo todo lo posible.\cb1 \
\ls8\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Toda variable o arreglo definido en forma din\'e1mica debe ser liberado al finalizar el programa.\cb1 \
}
{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red29\green29\blue29;\red255\green255\blue255;\red83\green83\blue83;
\red182\green83\blue203;}
{\*\expandedcolortbl;;\cssrgb\c14902\c14902\c14902;\cssrgb\c100000\c100000\c100000;\cssrgb\c40000\c40000\c40000;
\cssrgb\c77255\c43529\c83529\c25098;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs27 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Contenido de la actividad\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs28 \cf2 \
\pard\pardeftab720\sl200\qc\partightenfactor0

\f2\fs21 \cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf2 \cb5 \strokec2 \
\pard\pardeftab720\sl200\qc\partightenfactor0

\f2\fs21 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\qc\partightenfactor0

\f1\fs28 \cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs31\fsmilli15750 \cf2 \cb3 Consigna\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs21 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Resolver los siguientes ejercicios:\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 Ejercicio 1: Ruleta rusa 
\f1\b0 \cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Se trata de un proceso REVOLVER y otro JUGADORES con varios hilos (uno por cada jugador).\cb1 \
\cb3 Utiliza cola de mensajes con los siguientes 
\f0\b IDs: 
\f1\b0 \cb1 \
\cb3 MSG_NADIE\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a00\cb1 \
\cb3 MSG_REVOLVER\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a01\cb1 \
\cb3 MSG_JUGADOR\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a02(+nro_JUGADOR)\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Eventos:
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 EVT_NINGUNO\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a00\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb1 \
\cb3 EVT_INICIO\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a01\cb1 \
\cb3 EVT_DISPARO\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a02\cb1 \
\cb3 EVT_SALVADO\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a03\cb1 \
\cb3 EVT_FIN\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a04\'a0\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso REVOLVER: (MSG_ REVOLVER)
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 Hilo Principal (main)\ulnone :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 1- La cantidad de jugadores es siempre 6.\cb1 \
\cb3 2- Borrar los mensajes anteriores para empezar de 0.\'a0\cb1 \
\cb3 3- Elije, en forma aleatoria, un n\'famero del 1 al 6 y lo guarda en memoria local.\cb1 \
\cb3 4- Le env\'eda un mensaje a cada JUGADOR, EVT_INICIO. (MSG_JUGADOR+i).\cb1 \
\cb3 5- Espera recibir mensajes de los JUGADORES.\cb1 \
\cb3 EVT_DISPARO, NUMERO_ELEGIDO.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si NUMERO_ELEGIDO recibido es diferente al n\'famero del punto 3, contesta al JUGADOR con EVT_SALVADO.\'a0(msg.int_rte).\'a0Sigue con el punto 6.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Si NUMERO_ELEGIDO recibido es igual al n\'famero del punto 3, el \'93juego\'94 finaliza; se env\'eda un mensaje EVT_FIN, NRO_JUGADOR (\'93eliminado\'94)\'a0a todos los JUGADORES (MSG_JUGADOR+i). Sigue con el punto 7.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 6- Repite desde el punto 5.\cb1 \
\cb3 7- Finaliza.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso JUGADORES:\'a0
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 El hilo principal (main)\ulnone :\'a0\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 La cantidad de jugadores es siempre 6.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Genera un vector de 6 posiciones inicializado en 0, llamado \'93vector_tambor\'94, [0][0][0][0][0][0]. Este vector simula la posici\'f3n de cada bala.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lanza tantos HiloJUGADOR como JUGADORES haya, y les pasa un puntero con la direcci\'f3n del \'93vector_tambor\'94.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Se queda esperando que terminen los hilos.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Muestra el n\'famero del JUGADOR\'a0\'93eliminado\'94 por pantalla (recibido de los hilos).\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 HiloJUGADOR (uno por JUGADOR): (MSG_JUGADOR+nro_JUGADOR)\cb1 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Para evitar que todas disparen juntas se deber\'e1 usar un MUTEX.\cb1 \
\cb3 1- Espera recibir el mensaje EVT_INICIO.\cb1 \
\cb3 2- Escribir por pantalla, \'93Soy el jugador N y voy a dispararme\'93\cb1 \
\cb3 3- Env\'eda al REVOLVER el EVT_DISPARO,\'a0NUMERO_ELEGIDO;\'a0este n\'famero lo saca del \'93vector_tambor\'94, de uno por vez (es decir, donde no hay un 0), despu\'e9s pone esa posici\'f3n en 1. vector_tambor=>[1][0][0][0][0][0].\'a0\cb1 \
\cb3 4- Escribir por pantalla, \'93Soy el jugador N y la posici\'f3n del tambor es M\'93\cb1 \
\cb3 5- Espera recibir mensajes del REVOLVER.\cb1 \
\cb3 6- SI recibe un mensaje EVT_SALVADO.\cb1 \
\cb3 Si recibe un mensaje EVT_FIN,\'a0devuelve el n\'famero del JUGADOR \'93eliminado\'94 al main.\cb1 \
\cb3 7- Devuelve si se \'93salv\'f3\'94 o fue \'93eliminado\'94 y termina.\cb1 \
\uc0\u8232 \
\cb3 Nota: utilizar Makefile con la estructura de archivos vista en clases.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 Ejercicio 2: Bingo
\f1\b0 \cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Un BINGO est\'e1 representado por proceso BINGO y otro JUGADORES con varios threads (uno por jugador).\cb1 \
\cb3 Utiliza cola de mensajes con los siguientes IDs:\cb1 \
\cb3 MSG_NADIE 0\cb1 \
\cb3 MSG_BINGO 1\cb1 \
\cb3 MSG_JUGADOR 2 //Cada thread le suma uno a este define.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Eventos:
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 EVT_NINGUNO 0\cb1 \
\cb3 EVT_BOLILLA 1 // Lleva como par\'e1metro el n\'famero de bolilla (1 al 99)\cb1 \
\cb3 EVT_CARTON_LLENO 2 //\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso JUGADORES:\'a0
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Recibe por par\'e1metro la cantidad de Jugadores.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 El hilo principal (main\ulnone ):\'a0\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lanza tantos ThreadJugadores como jugadores se haya ingresado por par\'e1metro.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Se queda esperando que terminen los threads.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Al finalizar los threads, se debe mostrar la cantidad recibida de aciertos de cada uno de ellos.\'a0\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 ThreadJugador(uno por jugador): (MSG_JUGADOR+nroJugador)\cb1 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Cada ThreadJugador genera al azar 5 n\'fameros del 1 al 99, y los guarda en un vector (intcarton[5]). Y realiza lo siguiente:\cb1 \
\cb3 1- Espera recibir un mensaje MSG_JUGADOR (+el n\'famero de jugador).\cb1 \
\cb3 2- Cada vez que recibe un EVT_BOLILLA, verifica si tiene ese n\'famero en el cart\'f3n; en caso de acierto, suma 1 a la variable cant_aciertos (local del thread e inicializada en 0).\cb1 \
\cb3 3- Mostrar por pantalla la cantidad de aciertos.\cb1 \
\cb3 4- Si completo el cart\'f3n:\cb1 \
\cb3 a. Env\'eda al proceso BINGO (MSG_BINGO) el evento EVT_CARTON_LLENO\cb1 \
\cb3 b. Env\'eda un EVT_CARTON_LLENO a los dem\'e1s jugadores, incluido a el mismo.\cb1 \
\cb3 5- Si recibe un mensaje EVT_CARTON_LLENO, devuelve la cantidad de aciertos y finaliza el hilo.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\f3\i \cf2 \cb3 Proceso BINGO: (MSG_BINGO)
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Recibe por par\'e1metro la cantidad de Jugadores.\cb1 \
\uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 Hilo Principal (main)\ulnone :\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lanza el ThreadBolillero.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Espera recibir por cola de mensaje el EVT_CARTON_LLENO; esto termina el proceso BINGO mostrando el n\'famero del jugador ganador.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \ul \ulc2 Hilo Bolillero\ulnone :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Genera en forma aleatoria n\'fameros no repetitivos del 1 al 99 y los env\'eda por medio del EVT_BOLILLA a todos los jugadores, repite esta acci\'f3n cada N ms (N aleatorio entre 500 y 5000ms).\cb1 \
\uc0\u8232 \
\cb3 NOTA: utilizar Makefile con la estructura de archivos vista en clases.\cb1 \
}